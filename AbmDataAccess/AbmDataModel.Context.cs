//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AbmDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AbmSystemEntities : DbContext
    {
        public AbmSystemEntities()
            : base("name=AbmSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<PurchaseOrderItem> PurchaseOrderItems { get; set; }
    
        public virtual ObjectResult<Nullable<int>> CreatePurchaseOrder(Nullable<int> userId, Nullable<int> accountId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreatePurchaseOrder", userIdParameter, accountIdParameter);
        }
    
        public virtual int CreatePurchaseOrderItem(Nullable<int> purchaseOrderId, Nullable<int> itemId, Nullable<int> quantity, Nullable<int> receivedQuantity)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var receivedQuantityParameter = receivedQuantity.HasValue ?
                new ObjectParameter("ReceivedQuantity", receivedQuantity) :
                new ObjectParameter("ReceivedQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePurchaseOrderItem", purchaseOrderIdParameter, itemIdParameter, quantityParameter, receivedQuantityParameter);
        }
    }
}
